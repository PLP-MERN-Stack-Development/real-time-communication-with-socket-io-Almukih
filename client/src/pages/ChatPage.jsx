import React,{useContext,useEffect,useRef,useState} from 'react'; import { socket } from '../socket/socket'; import { UserContext } from '../context/UserContext'; import Message from '../components/Message'; export default function ChatPage(){ const { user } = useContext(UserContext); const [messages,setMessages]=useState([]); const [text,setText]=useState(''); const [users,setUsers]=useState([]); const [typing,setTyping]=useState({}); const ref=useRef(); useEffect(()=>{ socket.on('room_history', ({ messages: hist }) => setMessages(hist)); socket.on('new_message', (m) => setMessages(prev=>[...prev, m])); socket.on('user_list', (list) => setUsers(list)); socket.on('user_typing', ({ username, typing }) => setTyping(prev=>({ ...prev, [username]: typing }))); socket.on('notification', (n) => console.log('notif', n)); socket.on('private_message', (pm) => { setMessages(prev=>[...prev, pm]); }); return ()=> socket.off(); }, []); useEffect(()=> { if(ref.current) ref.current.scrollTop = ref.current.scrollHeight; }, [messages]); const send = () => { if(!text.trim()) return; socket.emit('message', { room: 'global', text }, ()=>{}); setText(''); socket.emit('typing', { room: 'global', typing: false }); }; const onTyping = (e) => { setText(e.target.value); socket.emit('typing', { room: 'global', typing: true }); }; return (<div className='chat-app'><aside className='sidebar'><h4>Users</h4><ul>{users.map(u=> <li key={u.username}>{u.username}</li>)}</ul></aside><main className='chat-main'><div className='messages' ref={ref}>{messages.map(m=> <Message key={m.id} m={m} />)}</div><div className='typing'>{Object.keys(typing).filter(k=>typing[k]).map(k=> <div key={k}>{k} is typing...</div>)}</div><div className='composer'><input value={text} onChange={onTyping} onKeyDown={(e)=> e.key==='Enter' && send()} placeholder='Write a message...' /><button onClick={send}>Send</button></div></main></div>); }